//
//  FlightsModels.swift
//  TestFlightCenter
//
//  Created by Ahmad Waqas on 14/2/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum Flights
{
  // MARK: Use cases
  
  enum FlightModel
  {
    struct Request {
        
    }
    struct Response: Codable
    {
        var flights: [Flight]
        var message: String
        init(flights: [Flight]?, message: String?)  {
            self.flights = flights ?? []
            self.message = message ?? FlightStoreError.unknown.errorMessage
        }
    }
    struct ViewModel
    {
        var groupedFlights =  [Date:[Flight]]()
        
        struct FlightInfo {
            internal init(flightID: Int = 0,
                          departureCityShortName: String? = nil,
                          departureCityFullName: String? = nil,
                          arrivalCityShortName: String? = nil,
                          arrivalCityFullName: String? = nil,
                          departureTimeShort: String? = nil,
                          departureTimeFull: Date? = nil,
                          arrivalTimeShort: String? = nil,
                          arrivalTimeFull: Date? = nil,
                          flightStops: String? = nil,
                          flightduration: String? = nil) {
                self.departureCityShortName = departureCityShortName
                self.departureCityFullName = departureCityFullName
                self.arrivalCityShortName = arrivalCityShortName
                self.arrivalCityFullName = arrivalCityFullName
                self.departureTimeShort = departureTimeShort
                self.departureTimeFull = departureTimeFull
                self.arrivalTimeShort = arrivalTimeShort
                self.arrivalTimeFull = arrivalTimeFull
                self.flightStops = flightStops
                self.flightduration = flightduration
            }
            
            var flightHeadline: String {
                guard let array = arrivalCityFullName?.components(separatedBy: ", ") else { return ""}
                let str = "Flight to" + array[0]
                return str
            }
            var flightID: Int = 0
            var departureCityShortName: String?
            var departureCityFullName: String?
            var arrivalCityShortName: String?
            var arrivalCityFullName: String?
            var departureTimeShort: String?
            var departureTimeFull: Date?
            var arrivalTimeShort: String?
            var arrivalTimeFull: Date?
            var flightStops: String?
            var flightduration: String?
            
        }
    }
  }
}
