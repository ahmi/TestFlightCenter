//
//  FlightsInteractor.swift
//  TestFlightCenter
//
//  Created by Ahmad Waqas on 14/2/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FlightsBusinessLogic
{
  func fetchFlights()
}

protocol FlightsDataStore
{
  var name: String { get set }
}

class FlightsInteractor: FlightsBusinessLogic, FlightsDataStore
{
    var presenter: FlightsPresentationLogic?
    var worker: FlightsWorker?
    var name: String = ""

    func fetchFlights() {
        let flightStore = FlightLocalStore() //FlightAPIStore()
        worker = FlightsWorker(flightStoreProtocol: flightStore)
        worker?.getAllFlightList(completion: { (result) in
            print("\(result)")
            switch result {
                case .success(let flightList):
                    let response =  Flights.FlightModel.Response(flights: flightList, message: "Success")
                    for flight in flightList {
                        NetworkingHelper.formatDateString(strDate: flight.arrival_date)
                        NetworkingHelper.formatDateString(strDate: flight.departure_date)
                    }
                    print(response)
                case .failure(let error): do {
                    print(error.errorMessage)
                }
            }
        })
    }
}
